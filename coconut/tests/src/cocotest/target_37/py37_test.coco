import asyncio, typing

def py37_test() -> bool:
    """Performs Python-3.7-specific tests."""
    async yield def toa(it):
        for x in it:
            yield x
    match yield async def arange(int(n)):
        for x in range(n):
            yield x
    async def aconsume(ait):
        async for _ in ait:
            pass
    l: typing.List[int] = []
    async def main():
        await (range(10) |> toa |> fmap$(l.append) |> aconsume)
        await (arange(10) |> fmap$(l.append) |> aconsume)
    asyncio.run(main())
    assert l == list(range(10)) + list(range(10))
    return True
